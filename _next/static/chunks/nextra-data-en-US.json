{"/%EA%B0%9C%EC%9D%B8%EA%B0%9C%EB%B0%9C/%ED%85%8C%EC%8A%A4%ED%8A%B8/nextra-obsidian%202":{"title":"Nextra Obsidian%202","data":{"":"12123asdfasdfasdfasdfasfasdf\n123123123123\nnextra-obsidian 2 1"}},"/%EA%B0%9C%EC%9D%B8%EA%B0%9C%EB%B0%9C/%ED%85%8C%EC%8A%A4%ED%8A%B8/nextra-obsidian%202%201":{"title":"Nextra Obsidian%202%201","data":{"":"asdfasdfasdfasdfasfasdf\n123123123123\nnextra-obsidian 2"}},"/%EA%B0%9C%EC%9D%B8%EA%B0%9C%EB%B0%9C/Issue%20Tracker%20Plugin":{"title":"Issue%20tracker%20plugin","data":{"summary#Summary":"Gitlab/Github API를 사용하여 사용자에게 할당된 이슈를 읽어오는 플러그인","구현#구현?":"지정된 obsidian 노트 폴더 하위에 일정한 양식으로 노트를 생성\n노트 안에 이슈 내용을 입력\n코멘트 표시 방식은 고민 필요\n읽기 전용으로\n쓰기가 가능하다면 동기화 문제가 생길 수 있음","참고#참고":"https://github.com/benr77/obsidian-gitlab-issues\n마지막 업데이트 1년전, 유지보수 안되는듯 함\n깃랩만 지원\n이미지 로딩 이슈가 있음\n이미지를 url에서 직접 불러오는 구조\n폐쇄망처럼 외부 인터넷과 통신이 안되는 환경에서는 이미지 로드 불가\n동기화 시간이 15분으로 고정됨"}},"/%EA%B0%9C%EC%9D%B8%EA%B0%9C%EB%B0%9C/OCI%20+%20discord%20bot%20deploy(1)":{"title":"Discord 봇 배포 CI 작성","data":{"docker-install#Docker Install":"","for-docker#For Docker":"curl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh","for-docker-compose#For Docker-Compose":"sudo apt install docker-compose","sudo-없이-도커-실행-optional#Sudo 없이 도커 실행 (Optional)":"sudo usermod -aG docker $USER","portainer-setup#Portainer Setup":"mkdir ~/portainer\nnano ~/portainer/docker-compose.yml\n아래 내용 붙여넣기 이후, ctrl + x -> y -> Enterdocker-compose.yml\nversion: '3'\nservices:\n  portainer:\n    image: portainer/portainer-ce\n    container_name: portainer\n    restart: always\n    ports:\n      - 8000:8000\n      - 9443:9443\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - portainer_data:/data\nvolumes:\n  portainer_data:\ncd ~/portainer\nsudo docker-compose up -d","oci-port-open#OCI Port Open":"인스턴스 메뉴에서 서브넷 부분 클릭\n보안 목록 클릭\n수신 규칙 추가 클릭\n사진처럼 세팅후 규칙 추가\n아래 인스턴스 아이피 변경하여 접속\nhttps://인스턴스아이피:9443","접속시-portainer-ui에서-secure-어쩌구-오류-발생하는-경우#접속시 portainer ui에서 secure 어쩌구 오류 발생하는 경우":"cd ~/portainer\nsudo docker-compose restart\n이후 재접속","portainer-setup-1#Portainer Setup":"최초 계정 생성 작업\n환경 선택 두가지 중 왼쪽 환경 클릭","registry-setup#registry setup":"왼쪽 Settings에 Registries > Add Registryregistry url: ghcr.io\nuesrname: 깃허브아이디\npassword: 아까 생성한 github access token\n기본적인 프로젝트 도커 빌드 세팅 필요함\n프로젝트 루트 경로 기준으로 파일 작성\n.github/workflows/main.yml\nname: Build And Push\non:\n  push:\n    branches: [main] # !!!! master 사용시 master로 변경필요 !!!!\nenv:\n  DOCKER_NAME: 도커이미지명 # 원하는 이미지명으로 작성\n  DOCKER_IMAGE: ghcr.io/깃헙계정명/도커이미지명\njobs:\n  build-and-push:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Check out source code\n        uses: actions/checkout@v3\n      # tonistiigi/binfmt 이미지를 이용해 qemu 설치\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v2\n      # docker buildx 설치\n      - name: Set up docker buildx\n        id: buildx\n        uses: docker/setup-buildx-action@v2\n        # secrets를 이용해 Docker Hub 로그인\n      - name: Login to ghcr\n        uses: docker/login-action@v2\n        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.GHCR_PAT }}\n      # buildx 명령어로 amd64, arm64, arm/v6, arm/v7 아키텍처 이미지 빌드 및\n      - name: Docker Build\n        run: docker buildx build --platform linux/amd64,linux/arm64 -t ${{ env.DOCKER_IMAGE }}:latest -t ${{ env.DOCKER_IMAGE}}:${{ github.run_id }} --push .\nwrite:packages 권한이 있는 깃허브 키를 생성\n(profile > Settings > developer settings)\n생성한 키를 레포지토리 secret에 등록\n이때 키(name)은 \"GHCR_PAT\"로 등록\nrepository > Settings > Secrets and variables > Actions > New repository Secret\n코드를 push하면 CI가 자동으로 실행되고, github packages에 이미지가 올라감","deploy-on-portainer#Deploy on portainer":"Stacks > Add Stack\nversion: '3'\nservices:\n  discord_bot:\n    image: ghcr.io/깃허브계정명/도커이미지명:latest\n    restart: always\n    environment:\n      - 환경변수키=값 # 디스코드 봇에서 써야하는 환경변수 입력\n      - 환경변수키=값","latest-버전에서-이슈가-발견된다면#latest 버전에서 이슈가 발견된다면":"Stacks > 생성한 스택 > Editor탭\nimage 부분의 버전 태그를 이슈 발생 이전의 버전으로 변경후 재배포"}},"/%EB%AC%B8%EC%84%9C%ED%99%94":{"title":"%eb%ac%b8%ec%84%9c%ed%99%94","data":{"":"Sample Editor Command","react-live-#React live ?":"chakra 개발자들도 전부 sandpack로 통일시키려 했는데 디자인이나, 로딩 이슈 같은게 있어서간단한 예제 -> react-live\n복잡한 예제 -> sandpack\n이렇게 쓰기로 결론https://github.com/chakra-ui/chakra-ui-docs/pull/791","원하는-기능#원하는 기능":"mdx로 콘텐츠 관리 >> 편함\nsandpack, react-live 수정 가능한 실시간 프리뷰\n자동 타입 지원이 되면 베스트, props 테스트하기 편함\nplayground 느낌으로 사용 가능\n현재 보고 있는 문서와 연관된 컴포넌트를 명시하면 좋겠음\n사용 예시와 props설명 문서를 분리하여 관리, props 항목이 많거나 자세한 설명이 필요한 경우에 유용\nhttps://primereact.org/checkbox/\n여러 버전의 디자인시스템 문서를 동시에 볼 수 있게 (버전이 늘어난다면 필요?)\nex) ds.estsecurity.com/docs/1.1.2/components/button\nds.estsecurity.com/docs/2.1.1/components/button\n사용되는 언어 표시 UI\n중간 피드백 이후에 프레젠테이션의 방향성을 잘 찾았고, 내용도 주제에 더 잘 맞추어 집중할 수 있었던것 같다."}},"/Backoffice/TinyMCE%20Editor%20%EC%A0%95%EB%A6%AC":{"title":"Tinymce%20editor%20%ec%a0%95%eb%a6%ac","data":{"tinymce#TinyMCE":"위지윅 에디터\nnpm 에서 설치하여 사용 가능\n무료/유료 플랜으로 나뉘어 있음\n무료 플랜에선 기본적으로 포함된 플러그인만 사용 가능\n유료 플랜은 여러개로 나뉘어 있고 플러그인의 차이, 월간 에디터 로드 가능 횟수(?)의 차이가 있음","장점#장점":"위지윅 에디터라 편집한 내용이 그대로 화면에 보여짐\n라이브러리 형태로 제공되기 때문에 개발자가 원하는 곳에서 사용 가능\nreact, vue, angluar 같은 프레임워크와 호환 가능\n다른 위지윅 에디터들보다 기본 기능도 괜찮은 편이고, 디자인도 무난함\n무료 플랜이 존재\n기본 플러그인으로 사용이 제한되지만, 필요한 기능은 갖추고 있음\n무료 플랜에서 사용 가능한 플러그인들\n커스텀 플러그인의 작성이 가능함\n무료 플랜에서 사용 불가능한 플러그인이나 구현되지 않은 기능들에 대해, 필요에 따라 직접 개발하여 사용 가능해 보임","단점#단점":"사용 방식에 따라 준비 과정이 필요함\napi 키를 발급받아 사용\ntiny에 가입하고 무료 api키를 발급 받아야 함\n사용량 제한 있는걸로 보임\nself hosting 서버 사용\nnode_modules/tinymce 소스코드를 직접 웹 서버가 호스팅 해줘야 함\npostinstall 스크립트로 해결 가능\n제어권이 개발자에게 있어서 사용량 제한은 없을 것으로 보임\n무료 플랜의 기능 제한\n베이스 플러그인에도 필요한 핵심 기능은 대부분 구현되어 있음\n프리미엄 플랜에서만 가능한 플러그인들","비교#비교":"","vs-obsidian#\bvs Obsidian":"TinyMCE\tObsidian\t위지윅 에디터 (html)\t마크다운 에디터 (옵시디언 문법의 md)\t라이브러리 형태로 제공\t설치 프로그램 형태로 제공\t무료(기능제한)/유료 플랜 존재\t무료/유료(라이센스,추가기능) 플랜 존재\thtml 문법을 몰라도 UI 조작으로 스타일링 가능\tmd 문법을 알아야 스타일링, 콘텐츠 작성이 가능\t작성하면서 미리보기 가능\t작성시에는 markdown 문법이 보임\t플러그인 지원\t플러그인 지원\t웹 호스팅 불가능, 직접 구현해야 함\t유료 플랜 이용시 웹 호스팅 가능 or 직접 구현시에도 가능","vs-gitlab#vs Gitlab":"TinyMCE\tGitlab\t위지윅 에디터 (html)\t마크다운 파일 에디터 (md)\t라이브러리 형태로 제공\tGitlab 서비스 내에서 제공\t작성하면서 실시간으로 미리보기 가능\t작성하면서 실시간으로 미리보기 불가능, 다른 탭으로 이동하여 확인 가능\thtml 문법을 몰라도 UI 조작으로 스타일링 가능\tmd 문법을 알면 더 많은 스타일의 콘텐츠를 작성 가능 (툴바로 어느정도 작성 가능)\t플러그인 지원\t플러그인 미지원\t웹 호스팅 불가능, 직접 구현해야 함\tGitlab pages를 통해 호스팅 가능","정리#정리":"TinyMCE는 위지윅 에디터여서 obsidian, gitlab과는 다르게 html 포맷으로 콘텐츠를 관리함\n마크다운 문법이 필요하다면 html to markdown을 해 주는 라이브러리를 사용 할 수 있지만, 콘텐츠의 스타일이 변형될 가능성이 있음\n유료 플랜이 존재하고, 무료 플랜은 플러그인의 사용에 제약이 있음 (커스텀 플러그인은 제외)\nTinyMCE의 설치 과정이 일반 위지윅 에디터에 비해 불편한 점은 분명히 존재함\nTinyMCE는 커스텀 플러그인을 지원하여 필요한 기능을 직접 구현할 수 있음\n커스텀 스타일 주입도 가능할 것으로 보이는데 확인 필요함.\n비교한 obsidian, gitlab은 마크다운 문법을 알아야 잘 활용할 수 있음"}},"/":{"title":"Index","data":{"":"없으면 오류나서 만들어놓은 홈 화면"}},"/nextra-obsidian%201":{"title":"Nextra Obsidian%201","data":{"":"테스트 메세지\n테스트 메세지\n테스트 메세지\n테스트 메세지\n테스트 메세지\n테스트 메세지\n테스트 메세지\n테스트 메세지\n테스트 메세지\n테스트 메세지\n테스트 메세지\n테스트 메세지\n테스트 메세지"}}}